---
title: "Quarto 572 HW"
format: html
editor: visual
---

## Project Beginning

In this project , we have experimented with different quarto settings, and analysed a data set named "Popular Kids"

## Running Code

When you click the **Render** button a document will be generated that includes both content and the output of embedded code. You can embed code like this:

```{r, warning = FALSE, message = FALSE}
 library(foreign)
 library(ggplot2)
 library(DT)
 setwd(here::here()) 
 dataset=read.arff("PopularKids.arff")
```

You can add options to executable code like this

```{r}
#| echo: false
custom_palette <- c("Sports" = "dodgerblue", "Popular" = "salmon")
ggplot(dataset, aes(x = Goals, y = Grades, fill = Goals)) +
  geom_boxplot() +
  scale_fill_manual(values = custom_palette) +
  labs(title = "Boxplot of Grades by Goals",
       x = "Goals",
       y = "Grades") +
  theme_minimal() +
  theme(legend.position = "none") +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))
```

The `echo: false` option disables the printing of code (only output is displayed).

```{r}
result <- kruskal.test(Grades ~ Goals, data = dataset)

# Print the test result
print(result)

means <- aggregate(Grades ~ Goals, data = dataset, FUN = mean)

# Print the means
print(means)

means <- aggregate(. ~ Goals, data = dataset[, c("Goals", "Grades", "Sports", "Looks", "Money")], FUN = mean)
means_rounded <- means
means_rounded[, -1] <- round(means[, -1], digits = 1)
datatable(means_rounded)
```

```{r}

a=table(dataset$Gender,dataset$Goals)
df=as.matrix(a)
colnames(df)
rownames(df)
data_frame=rbind(c("",colnames(df)),c("boy",df[1,1:3]),c("girl",df[2,1:3]))
datatable(data_frame)
```

```{r}


means2 <- aggregate(. ~Gender, data = dataset[, c("Gender", "Grades", "Sports", "Looks", "Money")], FUN = mean)
means_rounded2 <- means2
means_rounded2[, -1] <- round(means2[, -1], digits = 1)
datatable(means_rounded2)
```

```{r, warning = FALSE, message = FALSE}
library(dplyr)
library(purrr)
library(readxl)
library(stringr)
library(janitor)

```

```{r}
# The url below points to an Excel file
# hosted on the book's github repository
url <- "https://is.gd/1vvBAc"

raw_data <- tempfile(fileext = ".xlsx")

download.file(url, raw_data,
              method = "auto",
              mode = "wb")

sheets <- excel_sheets(raw_data)

read_clean <- function(..., sheet){
  read_excel(..., sheet = sheet) |>
    mutate(year = sheet)
}

raw_data <- map(
  sheets,
  ~read_clean(raw_data,
              skip = 10,
              sheet = .)
                   ) |>
  bind_rows() |>
  clean_names()

raw_data <- raw_data |>
  rename(
    locality = commune,
    n_offers = nombre_doffres,
    average_price_nominal_euros = prix_moyen_annonce_en_courant,
    average_price_m2_nominal_euros = prix_moyen_annonce_au_m2_en_courant,
    average_price_m2_nominal_euros = prix_moyen_annonce_au_m2_en_courant
  ) |>
  mutate(locality = str_trim(locality)) |>
  select(year, locality, n_offers, starts_with("average"))


```

```{r}
raw_data$average_price_m2_nominal_euros[raw_data$average_price_m2_nominal_euros=="*"]=NA
```

```{r}
filter1=raw_data[order(raw_data$average_price_m2_nominal_euros),c(1,2,5)]
filter2= filter1[filter1$year=="2010",]


head(filter2)
```

The cheapest places mer m2 are listed above, notice how most of their names starts with W
